services:
    nginx:
        image: nginx:1.21.6
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf
            - ./static:/var/www/html/static
            - ./certs:/etc/nginx/certs
        depends_on:
            - node1
            - node2
            - node3
        ports:
            - "8888:80"
            - "443:443"
        restart: always
        networks:
            - app-network

    node1:
        build:
            context: app
            dockerfile: Dockerfile
        working_dir: /usr/src/app
        volumes:
            - ./app:/usr/src/app/
        depends_on:
            rabbitmq:
                condition: service_healthy
        ports:
            - "3000"
        environment:
            - INSTANCE=node1
            - DB_NAME=mongodb
            - PORT=3000
        networks:
            - app-network
            - db-network
            - mq-network

    node2:
        build:
            context: app
            dockerfile: Dockerfile
        working_dir: /usr/src/app
        volumes:
            - ./app:/usr/src/app/
        depends_on:
            rabbitmq:
                condition: service_healthy
        ports:
            - "3000"
        environment:
            - INSTANCE=node2
            - DB_NAME=mongodb
            - PORT=3000
        networks:
            - app-network
            - db-network
            - mq-network

    node3:
        build:
            context: app
            dockerfile: Dockerfile
        working_dir: /usr/src/app
        volumes:
            - ./app:/usr/src/app/
        depends_on:
            rabbitmq:
                condition: service_healthy
        ports:
            - "3000"
        environment:
            - INSTANCE=node3
            - DB_NAME=mongodb
            - PORT=3000
        networks:
            - app-network
            - db-network
            - mq-network

    mongodb:
        image: mongo:focal
        working_dir: /usr/src/db
        ports:
            - "27017:27017"
        environment:
            - MONGO_INITDB_ROOT_USERNAME=admin
            - MONGO_INITDB_ROOT_PASSWORD=admin
        networks:
            - db-network
        command: mongod --quiet --logpath /dev/null

    rabbitmq:
        build:
            dockerfile: rabbitmq.dockerfile
        networks:
            - mq-network
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:15672"]
            interval: 1s
            timeout: 5s
            start_period: 5s
            retries: 10
networks:
    app-network:
        driver: bridge
    db-network:
        driver: bridge
    mq-network:
        driver: bridge